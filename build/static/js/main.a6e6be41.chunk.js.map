{"version":3,"sources":["components/note.js","components/Notification.js","services/noteService.js","components/Footer.js","services/login.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","token","noteService","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","config","headers","Authorization","post","newObect","put","newToken","Footer","Fragment","style","color","fontStyle","fontSize","services_login","login","Object","asyncToGenerator","regenerator_default","mark","_callee","credentials","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","this","arguments","App","_useState","useState","_useState2","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","username","setUsername","_useState11","_useState12","password","setPassword","_useState13","_useState14","user","setUser","useEffect","console","log","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","_user2","preventDefault","loginService","setItem","stringify","t0","setTimeout","addNote","noteObject","length","Date","toISOString","Math","random","returnedNote","handleNoteChange","target","value","notesToShow","filter","components_Notification","onSubmit","type","onChange","_ref2","_ref3","name","map","components_note","key","find","n","changedNote","objectSpread","catch","error","toggleImportanceOf","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a6e6be41.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important ? 'make not important': 'make important'\r\n\r\n    return (\r\n    <li className='note'>\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n    </li>);\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }    \r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import axios from 'axios'\r\n\r\n//this will use a proxy. why? --> https://fullstackopen.com/en/part3/deploying_app_to_internet#proxy\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`;\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n      id: 10000,\r\n      content: 'This note is not saved to server',\r\n      date: '2019-05-30T17:30:31.098Z',\r\n      important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting));\r\n    //return request.then(response => response.data);\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const config = {\r\n        headers: { Authorization: token},\r\n    }\r\n\r\n    const request = axios.post(baseUrl, newObject, config);\r\n    return request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObect) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObect);\r\n\r\n    return request.then((response) => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, setToken };","import React from 'react';\r\n\r\nconst Footer = ()=> {\r\n    const footerStyle= {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div style={footerStyle}>\r\n                <br/>\r\n                <em> Note App, Department of Computer Science, University of Helsinki 2019</em>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from 'axios';\r\nconst baseUrl ='/api/login';\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data\r\n}\r\n\r\nexport default { login };","import React, { useState, useEffect } from 'react';\r\nimport Note from './components/note';\r\nimport Notification from './components/Notification';\r\nimport noteService from './services/noteService';\r\nimport Footer from './components/Footer';\r\nimport loginService from './services/login';\r\n\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState('');\r\n    const [showAll, setShowAll] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [user, setUser] = useState(null);\r\n\r\n\r\n    const hook = () => {\r\n    console.log('effect')\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n    }\r\n    useEffect(hook, []);\r\n\r\n    const getBrowserTokenHook = () => {\r\n      const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\r\n\r\n      if(loggedUserJSON){\r\n        const user = JSON.parse(loggedUserJSON);\r\n        setUser(user);\r\n        noteService.setToken(user.token);\r\n      }\r\n    }\r\n    /* The empty array as the parameter of the effect ensures that the effect is\r\n     executed only when the component is rendered for the first time.*/\r\n    useEffect(getBrowserTokenHook, []);\r\n\r\n    const handleLogin =async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        const user = await loginService.login({\r\n          username, password\r\n        });\r\n\r\n        window.localStorage.setItem(\r\n          'loggedNoteappUser', JSON.stringify(user)\r\n        );\r\n\r\n        noteService.setToken(user.token);\r\n        setUser(user);\r\n        setUsername('');\r\n        setPassword('');\r\n        \r\n      } catch (error) {\r\n        setErrorMessage('Wrong Credentials');\r\n        setTimeout(() => {\r\n\r\n        }, 5000);\r\n      }\r\n    }\r\n\r\n    //CREATE\r\n    const addNote = (event)=> {\r\n      event.preventDefault();\r\n\r\n      const noteObject = {\r\n        id: notes.length + 1,\r\n        content: newNote,\r\n        date: new Date().toISOString,\r\n        important: Math.random > 0.5\r\n      }\r\n\r\n      noteService\r\n        .create(noteObject)\r\n        .then((returnedNote)=>{\r\n          setNotes(notes.concat(returnedNote));\r\n          setNewNote('');\r\n          //console.log('post response...', response);\r\n        })\r\n    }\r\n\r\n\r\n    //UPDATE toggles importance of this note. put request that will replace the note we just chnaged the importance of\r\n    const toggleImportanceOf = id => {\r\n      const note = notes.find((n)=> n.id === id);\r\n\r\n      // creates a new object that is an exact copy of the old note object, apart from the important property\r\n      const changedNote = { ...note, important: !note.important };\r\n\r\n      //PUT request\r\n      noteService\r\n        .update(id, changedNote)\r\n        .then((returnedNote )=>{\r\n          //setNotes to be all the notes except the one with the id we just changed.\r\n          //That should be replaced by the updated one we got from the put request's response.\r\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote));\r\n        })\r\n        .catch(error => {\r\n          //show error notification for only 5 seconds\r\n          setErrorMessage(`the note '${note.content}' was already deleted from server`);\r\n          setTimeout(()=> {\r\n            setErrorMessage(null);\r\n          }, 5000);\r\n          \r\n          //reload notes and dont add the deleted one this time.\r\n          setNotes(notes.filter(n => n.id !== id))\r\n        });\r\n\r\n      console.log('importance of '+ id +' needs to be toggled');\r\n    }\r\n\r\n\r\n    //controls the note input\r\n    const handleNoteChange = (event) => {\r\n      setNewNote(event.target.value);\r\n    }\r\n\r\n    //toggles whether to show all notes or only important notes\r\n    const notesToShow = showAll ?\r\n     notes:\r\n     notes.filter(note => note.important === true);\r\n\r\n     //gets the array of notes ot be displayed and displays them\r\n    const rows = () => {\r\n      return notesToShow.map(note => \r\n      <Note \r\n        key={note.id}\r\n        note={note}\r\n        toggleImportance={()=>toggleImportanceOf(note.id)} />);\r\n    }\r\n\r\n    const loginForm= () =>(\r\n      <form onSubmit= {handleLogin}>\r\n          <div>\r\n            username \r\n            <input type=\"text\" \r\n            value={username} \r\n            onChange={( {target} ) => setUsername(target.value)} />\r\n          </div>\r\n          <div>\r\n            password \r\n            <input type=\"password\" \r\n            value={password}\r\n            onChange={( {target} )=> setPassword(target.value)} />\r\n          </div>\r\n\r\n          <button type=\"submit\">login</button>\r\n\r\n        </form>\r\n    )\r\n\r\n    const noteForm = ()=> (\r\n      <form onSubmit={addNote}>\r\n          <input\r\n            value={newNote}\r\n            onChange={handleNoteChange} />\r\n          <button type=\"submit\">Save</button>\r\n        </form>\r\n    )\r\n    \r\n\r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n        <Notification message={errorMessage}/>\r\n        {user === null\r\n        ? loginForm()\r\n        : <div>\r\n          <p> {user.name} is logged in</p>\r\n          {noteForm()}\r\n          </div>}\r\n\r\n        <div>\r\n          <button onClick={()=> setShowAll(!showAll)}>\r\n            show {showAll? \"important\": \"all\"}\r\n          </button>\r\n        </div>\r\n\r\n        <ul>\r\n          {rows()}\r\n        </ul>\r\n\r\n        \r\n\r\n        <Footer />\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}