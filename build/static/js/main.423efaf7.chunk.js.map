{"version":3,"sources":["components/Note.js","components/Notification.js","services/noteService.js","components/Footer.js","services/login.js","components/Loginform.js","components/NoteForm.js","components/Togglable.js","components/Logout.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","token","noteService","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","config","headers","Authorization","post","newObect","put","newToken","Footer","Fragment","style","color","fontStyle","fontSize","services_login","login","Object","asyncToGenerator","regenerator_default","mark","_callee","credentials","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","this","arguments","LoginForm","props","handleLogin","username","password","handleUsernameChange","handlePasswordChange","onSubmit","type","value","onChange","target","_ref2","NoteForm","addNote","newNote","handleNoteChange","Togglable","React","forwardRef","ref","_useState","useState","_useState2","slicedToArray","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","Logout","user","clearUser","name","window","localStorage","clear","App","notes","setNotes","_useState3","_useState4","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","setUsername","_useState11","_useState12","setPassword","_useState13","_useState14","setUser","noteFormRef","createRef","useEffect","console","log","initialNotes","loggedUserJSON","getItem","JSON","parse","event","_user2","preventDefault","loginService","setItem","stringify","t0","setTimeout","current","noteObject","length","Date","toISOString","Math","random","returnedNote","notesToShow","filter","components_Logout","components_Notification","components_Togglable","Loginform","components_NoteForm","map","components_Note","key","find","n","changedNote","objectSpread","catch","error","toggleImportanceOf","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.423efaf7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important': 'make important';\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>);\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import axios from 'axios';\r\n\r\n//this will use a proxy. why? --> https://fullstackopen.com/en/part3/deploying_app_to_internet#proxy\r\nconst baseUrl = '/api/notes';\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: 'This note is not saved to server',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true,\r\n  };\r\n  return request.then(response => response.data.concat(nonExisting));\r\n  //return request.then(response => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const request = axios.post(baseUrl, newObject, config);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObect) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObect);\r\n\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, setToken };","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle= {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  };\r\n\r\n  return(\r\n        <>\r\n            <div style={footerStyle}>\r\n              <br/>\r\n              <p>to test this out you can use  username: &quot;michelin&quot; and password: &quot;atyrecompany&quot;</p>\r\n\r\n              <br/>\r\n              <em> Note App, Department of Computer Science, University of Helsinki 2019</em>\r\n            </div>\r\n        </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from 'axios';\r\nconst baseUrl ='/api/login';\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoginForm  = (props) => {\r\n  const { handleLogin, username, password,\r\n    handleUsernameChange, handlePasswordChange } = props;\r\n\r\n  LoginForm.propTypes = {\r\n    handleLogin: PropTypes.func.isRequired,\r\n    handleUsernameChange: PropTypes.func.isRequired,\r\n    handlePasswordChange: PropTypes.func.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    password: PropTypes.string.isRequired\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit= {handleLogin}>\r\n        <div>\r\n          username\r\n          <input type=\"text\"\r\n            value={username}\r\n            onChange={( { target } ) => handleUsernameChange(target.value)} />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input type=\"password\"\r\n            value={password}\r\n            onChange={( { target } ) => handlePasswordChange(target.value)} />\r\n        </div>\r\n\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\n\r\nconst NoteForm = (props) => {\r\n  const { addNote, newNote, handleNoteChange } = props;\r\n\r\n  return (\r\n    <form onSubmit={addNote}>\r\n      <input\r\n        value={newNote}\r\n        onChange={handleNoteChange} />\r\n      <button type=\"submit\">save note</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  Togglable.propTypes= {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  };\r\n\r\n  const hideWhenVisible = { display:visible? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  /** the useImperativeHandle function is a React hook, that is used for defining\r\n   *  functions in a component which can be invoked from outside of the component.*/\r\n  useImperativeHandle(ref, () => {\r\n    return{\r\n      toggleVisibility\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Togglable;","import React from 'react';\n\nconst Logout = (props) => {\n  const { user, clearUser } = props;\n  //console.log('user from logout component', user)\n\n  const logMeOut = () => {\n    window.localStorage.clear();\n    clearUser();\n  };\n  return(\n    <>\n      {user.name? user.name: user.username} is logged in\n      <button onClick={logMeOut}>logout</button>\n    </>\n  );\n};\n\nexport default Logout;\n","import React, { useState, useEffect } from 'react';\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport noteService from './services/noteService';\r\nimport Footer from './components/Footer';\r\nimport loginService from './services/login';\r\nimport LoginForm from './components/Loginform';\r\nimport NoteForm from './components/NoteForm';\r\nimport Togglable from './components/Togglable';\r\nimport Logout from './components/Logout';\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const noteFormRef = React.createRef();\r\n\r\n\r\n  const hook = () => {\r\n    console.log('effect');\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes);\r\n      });\r\n  };\r\n  useEffect(hook, []);\r\n\r\n  const getBrowserTokenHook = () => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\r\n\r\n    if(loggedUserJSON){\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      noteService.setToken(user.token);\r\n    }\r\n  };\r\n  /* The empty array as the parameter of the effect ensures that the effect is\r\n     executed only when the component is rendered for the first time.*/\r\n  useEffect(getBrowserTokenHook, []);\r\n\r\n  const handleLogin =async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password\r\n      });\r\n\r\n      window.localStorage.setItem(\r\n        'loggedNoteappUser', JSON.stringify(user)\r\n      );\r\n\r\n      noteService.setToken(user.token);\r\n\r\n      setUser(user);\r\n      setUsername('');\r\n      setPassword('');\r\n\r\n    } catch (error) {\r\n      setErrorMessage('Wrong Credentials');\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  //CREATE\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n\r\n    noteFormRef.current.toggleVisibility();\r\n\r\n    const noteObject = {\r\n      id: notes.length + 1,\r\n      content: newNote,\r\n      date: new Date().toISOString,\r\n      important: Math.random > 0.5\r\n    };\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then((returnedNote) => {\r\n        setNotes(notes.concat(returnedNote));\r\n        setNewNote('');\r\n        //console.log('post response...', response);\r\n      });\r\n  };\r\n\r\n\r\n  //UPDATE toggles importance of this note. put request that will replace the note we just chnaged the importance of\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find((n) => n.id === id);\r\n\r\n    // creates a new object that is an exact copy of the old note object, apart from the important property\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    //PUT request\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((returnedNote ) => {\r\n        //setNotes to be all the notes except the one with the id we just changed.\r\n        //That should be replaced by the updated one we got from the put request's response.\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        //show error notification for only 5 seconds\r\n        setErrorMessage(`the note '${note.content}' was already deleted from server`);\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n\r\n        //reload notes and dont add the deleted one this time.\r\n        setNotes(notes.filter(n => n.id !== id));\r\n      });\r\n\r\n    console.log('importance of '+ id +' needs to be toggled');\r\n  };\r\n\r\n\r\n  //controls the note input\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  //toggles whether to show all notes or only important notes\r\n  const notesToShow = showAll ?\r\n    notes:\r\n    notes.filter(note => note.important === true);\r\n\r\n  //gets the array of notes ot be displayed and displays them\r\n  const rows = () => {\r\n    //console.log(user);\r\n    return notesToShow.map(note =>\r\n      <Note\r\n        key={note.id}\r\n        note={note}\r\n        toggleImportance={() => toggleImportanceOf(note.id)} />);\r\n  };\r\n\r\n  const loginForm= () => {\r\n\r\n    return (\r\n      <Togglable buttonLabel='login form'>\r\n        <LoginForm username={username} password={password}\r\n          handleLogin={handleLogin}\r\n          handleUsernameChange={(value) => setUsername(value)}\r\n          handlePasswordChange={(value) => setPassword(value)} />\r\n      </Togglable>\r\n    );\r\n  };\r\n\r\n  const noteForm = () => (\r\n    <Togglable buttonLabel=\"new note\" ref={noteFormRef}>\r\n      <NoteForm\r\n        addNote={addNote}\r\n        newNote={newNote}\r\n        handleNoteChange={handleNoteChange}\r\n      />\r\n\r\n    </Togglable>\r\n  );\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {user !== null && <Logout user={user} clearUser={logout}/>}\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage}/>\r\n      {user === null\r\n        ? loginForm()\r\n        : <div>\r\n          <p>Welcome {user.name}</p>\r\n          {noteForm()}\r\n        </div>}\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n            show {showAll? 'important': 'all'}\r\n        </button>\r\n      </div>\r\n\r\n      <ul>\r\n        {rows()}\r\n      </ul>\r\n\r\n\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <App  />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}